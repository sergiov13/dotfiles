{"stepFunctions/activation":{"messages":["Render graph","Publish to Step Functions"],"keys":["AWS.stepFunctions.render","AWS.stepFunctions.publish"]},"awsexplorer/activation":{"messages":["Exception occurred while connecting"],"keys":["AWS.credentials.autoconnect.fatal"]},"credentials/activation":{"messages":["Connected to {0} with {1}"],"keys":["AWS.message.credentials.connected"]},"credentials/awsCredentialsStatusBarItem":{"messages":["(connected)","Connected to {0} with \"{1}\" (click to change)","Click to connect to {0}"],"keys":["AWS.credentials.statusbar.connected","AWS.credentials.statusbar.connected","AWS.credentials.statusbar.disconnected"]},"shared/defaultAwsContextCommands":{"messages":["Select a region to hide from the {0} Explorer","Select a region to show in the {0} Explorer","Created {0} credentials profile: {1}","{0} credentials appear invalid. Try again?","No {0} credentials found. Create one now?","Editing an {0} credentials file.","Select an {0} region"],"keys":["AWS.message.prompt.region.hide.title","AWS.message.prompt.region.show.title","AWS.message.prompt.credentials.definition.done","AWS.message.prompt.credentials.definition.tryAgain","AWS.message.prompt.credentials.create","AWS.message.prompt.credentials.definition.help","AWS.message.selectRegion"]},"shared/extensionUtilities":{"messages":["AWS","VS Code","Visual Studio Code","Command Palette","CodeLens","CodeLenses","Amazon","Cloud9","{0} Cloud9","Go to Anything Panel","Inline Action","Inline Actions","There was an error retrieving the Quick Start page","{0} Toolkit - Quick Start","View Quick Start","You are now using {0} Toolkit version {1}","{0} Toolkit PREVIEW. (To get the latest STABLE version, uninstall this version.)","Copy","OS:  {0} {1} {2}\n{3} Extension Host Version:  {4}\n{5} Toolkit Version:  {6}\n"],"keys":["AWS.title","AWS.vscode.shortName","AWS.vscode.longName","AWS.vscode.commandPalette","AWS.vscode.codelens","AWS.vscode.codelenses","AWS.title.cn","AWS.cloud9.shortName","AWS.cloud9.longName","AWS.cloud9.commandPalette","AWS.cloud9.codelens","AWS.cloud9.codelenses","AWS.command.quickStart.error","AWS.command.quickStart.title","AWS.command.quickStart","AWS.message.prompt.quickStart.toastMessage","AWS.startup.toastIfAlpha","AWS.message.prompt.copyButtonLabel","AWS.message.toolkitInfo"]},"shared/logger/activation":{"messages":["The log file for this session has been moved or deleted."],"keys":["AWS.log.logFileMove"]},"shared/sam/activation":{"messages":["Failed to activate Lambda handler {0}","Toolkit could not find an active editor","Toolkit cannot detect handlers in language: {0}","Open Marketplace Page","Dismiss","Dismiss, and don't show again","Install YAML extension for additional {0} features."],"keys":["AWS.codelens.failToInitializeCode","AWS.pickDebugHandler.noEditor","AWS.pickDebugHandler.invalidLanguage","AWS.message.info.yaml.goToMarketplace","AWS.generic.response.dismiss","AWS.message.info.yaml.suppressPrompt","AWS.message.info.yaml.prompt"]},"shared/telemetry/activation":{"messages":["View Settings","OK","The aws.telemetry value must be a boolean","The {0} Toolkit collects usage metrics by default. These metrics help drive toolkit improvements. This setting can be changed from the IDE settings."],"keys":["AWS.telemetry.notificationViewSettings","AWS.telemetry.notificationOk","AWS.message.error.settings.telemetry.invalid_type","AWS.telemetry.notificationMessage"]},"s3/activation":{"messages":["Unable to open S3 file, try reopening from the explorer"],"keys":["AWS.s3.fileViewer.genericError"]},"dynamicResources/activation":{"messages":["Resources"],"keys":["AWS.explorerNode.resources.label"]},"apprunner/activation":{"messages":["Failed to create App Runner service","Failed to create App Runner service from ECR","Failed to pause App Runner service","Failed to resume App Runner service","Failed to copy App Runner service URL","Failed to open App Runner service","Failed to start deployment of App Runner service","Failed to delete App Runner service"],"keys":["aws.apprunner.createService.failed","aws.apprunner.createServiceFromEcr.failed","aws.apprunner.pauseService.failed","aws.apprunner.resumeService.failed","aws.apprunner.copyServiceUrl.failed","aws.apprunner.open.failed","aws.apprunner.startDeployment.failed","aws.apprunner.deleteService.failed"]},"stepFunctions/asl/client":{"messages":["Amazon States Language Server"],"keys":["asl.server.name"]},"awsexplorer/defaultRegion":{"messages":["Yes, and don't ask again","No, and don't ask again","Default region \"{0}\" of profile \"{1}\" is currently hidden. Show it in {2} Explorer?","You will no longer be asked what to do when the current profile's default region is hidden from the Explorer. This behavior can be changed by modifying the '{0}' setting."],"keys":["AWS.message.prompt.yesDontAskAgain","AWS.message.prompt.defaultRegionHidden.alwaysIgnore","AWS.message.prompt.defaultRegionHidden","AWS.message.prompt.defaultRegionHidden.suppressed"]},"stepFunctions/commands/createStateMachineFromTemplate":{"messages":["There was an error creating the State Machine Template, check log for details."],"keys":["AWS.message.error.stepfunctions.getTextDocumentForSelectedItem"]},"stepFunctions/commands/publishStateMachine":{"messages":["Cannot publish invalid YAML file","Creating state machine '{0}' in {1}...","Successfully created state machine '{0}'","Failed to create state machine: {0}","Updating state machine '{0}' in {1}...","Successfully updated state machine '{0}'","Failed to update state machine: {0}"],"keys":["AWS.message.error.stepFunctions.publishStateMachine.invalidYAML","AWS.message.info.stepFunctions.publishStateMachine.creating","AWS.message.info.stepFunctions.publishStateMachine.createSuccess","AWS.message.error.stepFunctions.publishStateMachine.createFailure","AWS.message.info.stepFunctions.publishStateMachine.updating","AWS.message.info.stepFunctions.publishStateMachine.updateSuccess","AWS.message.error.stepFunctions.publishStateMachine.updateFailure"]},"stepFunctions/commands/downloadStateMachineDefinition":{"messages":["Unable to download state machine '{0}', check logs for details."],"keys":["AWS.message.error.stepfunctions.downloadStateMachineDefinition"]},"stepFunctions/commands/executeStateMachine":{"messages":["Executing {0} in {1}...","Execution started","There was an error starting execution for {0}, check logs for more information."],"keys":["AWS.message.info.stepFunctions.executeStateMachine.executing","AWS.message.info.stepFunctions.executeStateMachine.started","AWS.message.error.stepFunctions.executeStateMachine.failed_to_start"]},"cloudWatchLogs/commands/copyLogStreamName":{"messages":["Not a Cloudwatch Log stream: {0}"],"keys":["AWS.cloudWatchLogs.invalidEditor"]},"cloudWatchLogs/commands/saveCurrentLogStreamContent":{"messages":["Log File","Error saving current log to {0}: {1}","Not a Cloudwatch Log stream: {0}"],"keys":["AWS.command.saveCurrentLogStreamContent.logfile","AWS.command.saveCurrentLogStreamContent.error","AWS.cloudWatchLogs.invalidEditor"]},"cloudWatchLogs/commands/viewLogStream":{"messages":["Select a log stream","[No Log Events found]"],"keys":["AWS.cloudWatchLogs.viewLogStream.workflow.prompt","AWS.cloudWatchLogs.viewLogStream.workflow.noStreams"]},"cloudWatchLogs/document/logStreamCodeLensProvider":{"messages":["Loading...","Load older events...","Load newer events..."],"keys":["AWS.message.loading","AWS.cloudWatchLogs.codeLens.loadOlder","AWS.cloudWatchLogs.codeLens.loadNewer"]},"cloudWatchLogs/registry/logStreamRegistry":{"messages":["Error retrieving logs for Log Stream {0} : {1}"],"keys":["AWS.cloudWatchLogs.viewLogStream.errorRetrievingLogs"]},"cdk/explorer/nodes/appNode":{"messages":["[No stacks in this CDK App]","[Unable to load construct tree for this App. Run `cdk synth`]"],"keys":["AWS.cdk.explorerNode.app.noStacks","AWS.cdk.explorerNode.app.noConstructTree"]},"lambda/commands/deleteLambda":{"messages":["Are you sure you want to delete lambda function '{0}'?","There was an error deleting lambda function '{0}'"],"keys":["AWS.command.deleteLambda.confirm","AWS.command.deleteLambda.error"]},"lambda/commands/uploadLambda":{"messages":["ZIP Archive","Directory","Select Upload Type","{0} Toolkit will upload a ZIP of the selected directory.","{0} Toolkit will attempt to build the selected directory using the sam build command.","Build directory?","{0} Toolkit can't find a file corresponding to handler: {1} at filepath {2}.\n\nThis directory likely will not work with this function.\n\nProceed with upload anyway?","Setting up temporary build files...","Building project via sam build command...","This will immediately publish the selected code as the $LATEST version of Lambda: {0}.\n\nContinue?","Archiving files...","Uploading archive to Lambda...","Successfully uploaded Lambda function {0}"],"keys":["AWS.generic.filetype.zipfile","AWS.generic.filetype.directory","AWS.lambda.upload.title","AWS.lambda.upload.prebuiltDir.detail","AWS.lambda.upload.unbuiltDir.detail","AWS.lambda.upload.buildDirectory.title","AWS.lambda.upload.handlerNotFound","AWS.lambda.upload.progress.generatingTemplate","AWS.lambda.upload.progress.samBuilding","AWS.lambda.upload.confirm","AWS.lambda.upload.progress.archivingDir","AWS.lambda.upload.progress.uploadingArchive","AWS.lambda.upload.done"]},"lambda/commands/deleteCloudFormation":{"messages":["Unable to delete a CloudFormation Stack. No stack provided.","Are you sure you want to delete {0}?","Deleted CloudFormation Stack {0}","An error occurred while deleting {0}. Please check the stack events on the {1} Console"],"keys":["AWS.message.error.cloudFormation.unsupported","AWS.message.prompt.deleteCloudFormation","AWS.message.info.cloudFormation.delete","AWS.message.error.cloudFormation.delete"]},"lambda/vue/samInvokeBackend":{"messages":["SAM Debug Configuration Editor","No workspace folder found.","No aws-sam debug configurations found.","Click here to go back","Select Debug Configuration","Choose Sample Input","Template: {0}","No templates with valid SAM functions found.","Click here to go back","Select Resource","Add Debug Configuration","Select Debug Configuration","Input Name For Debug Configuration"],"keys":["AWS.command.launchConfigForm.title","AWS.lambda.form.noFolder","AWS.lambda.form.noDebugConfigs","AWS.picker.dynamic.noItemsFound.detail","AWS.lambda.form.selectDebugConfig","AWS.lambda.form.pickSampleInput","AWS.lambda.form.selectResource.detail","AWS.lambda.form.selectResource.noTemplates","AWS.picker.dynamic.noItemsFound.detail","AWS.lambda.form.selectResource","AWS.command.addSamDebugConfiguration","AWS.lambda.form.selectDebugConfig","AWS.lambda.form.debugConfigName"]},"awsexplorer/commands/copyArn":{"messages":["Copied {0} to clipboard","View Logs...","Could not find an ARN for selected {0} Explorer node"],"keys":["AWS.explorerNode.copiedToClipboard","AWS.generic.message.viewLogs","AWS.explorerNode.noArnFound"]},"shared/utilities/vsCodeUtils":{"messages":[],"keys":[]},"eventSchemas/commands/downloadSchemaItemCode":{"messages":["Downloading code for schema {0}...","Downloaded code for schema {0}!","Unable to download schema code","{0}: Generating code (this may take a few seconds the first time)...","{0}: Downloading code...","{0}: Extracting/copying code...","Unable to generate schema code","Invalid Code generation status {0}","Failed to download code for schema {0} before timeout. Please try again later","Following files already exist in the folder hierarchy :","Downloaded code hierarchy has collisions in the destination directory. Overwrite it?","Download code bindings cancelled"],"keys":["AWS.message.info.schemas.downloadCodeBindings.start","AWS.message.info.schemas.downloadCodeBindings.finished","AWS.message.error.schemas.downloadCodeBindings.failed_to_download","AWS.message.info.schemas.downloadCodeBindings.generate","AWS.message.info.schemas.downloadCodeBindings.downloading","AWS.message.info.schemas.downloadCodeBindings.extracting","AWS.message.error.schemas.downloadCodeBindings.failed_to_generate","AWS.message.error.schemas.downloadCodeBindings.invalid_code_generation_status","AWS.message.error.schemas.downloadCodeBindings.timeout","AWS.message.info.schemas.downloadCodeBindings.colliding_files","AWS.message.info.schemas.downloadCodeBindings.colliding_override","AWS.message.error.schemas.downloadCodeBindings.cancelled"]},"eventSchemas/commands/searchSchemas":{"messages":["No Schema Registries","EventBridge Schemas Search","Search for schema keyword...","Search matched version:","No schemas found","Searching for schemas...","Loading...","Select a schema","Error loading Schemas resources","Search \"{0}\" registry","Search across all registries","Unable to search registry {0}"],"keys":["AWS.schemas.search.no_registries","AWS.schemas.search.title","AWS.schemas.search.input.placeholder","AWS.schemas.search.version.prefix","AWS.schemas.search.no_results","AWS.schemas.search.searching","AWS.schemas.search.loading","AWS.schemas.search.select","AWS.message.error.schemas.search.failed_to_load_resources","AWS.schemas.search.header.text.singleRegistry","AWS.schemas.search.header.text.allRegistries","AWS.message.error.schemas.search.failed_to_search_registry"]},"eventSchemas/commands/viewSchemaItem":{"messages":["Could not fetch and display schema {0} contents"],"keys":["AWS.message.error.schemas.viewSchema.could_not_open"]},"credentials/credentialsUtilities":{"messages":["Get Help...","View Logs...","Invalid Credentials {0}, see logs for more information.","Getting credentials for profile: {0}"],"keys":["AWS.generic.message.getHelp","AWS.generic.message.viewLogs","AWS.message.credentials.invalid","AWS.message.credentials.pending"]},"shared/localizedText":{"messages":["Yes","No","OK","Retry","Skip","Delete","Cancel","Help","Input must be a positive number","View Documentation","recently used","Check the logs by running the \"View {0} Toolkit Logs\" command from the {1}."],"keys":["AWS.generic.response.yes","AWS.generic.response.no","AWS.generic.response.ok","AWS.generic.response.retry","AWS.generic.response.skip","AWS.generic.delete","AWS.generic.cancel","AWS.generic.help","AWS.validateTime.error.invalidNumber","AWS.generic.viewDocs","AWS.generic.recentlyUsed","AWS.error.check.logs"]},"shared/credentials/defaultCredentialSelectionDataProvider":{"messages":["Select an {0} credential profile","Select a credential profile","Create a new {0} credential profile","Choose a unique name for the new profile","Create a new {0} credential profile","Input the {0} Access Key","Create a new {0} credential profile","Input the {0} Secret Key","Profile name must not be empty","Access key must not be empty","Secret key must not be empty"],"keys":["AWS.title.selectCredentialProfile","AWS.placeHolder.selectProfile","AWS.title.createCredentialProfile","AWS.placeHolder.newProfileName","AWS.title.createCredentialProfile","AWS.placeHolder.inputAccessKey","AWS.title.createCredentialProfile","AWS.placeHolder.inputSecretKey","AWS.credentials.error.emptyProfileName","AWS.credentials.error.emptyAccessKey","AWS.credentials.error.emptySecretKey"]},"lambda/commands/createNewSamApp":{"messages":["Could not open file '{0}'. If this file exists on disk, try adding it to your workspace.","Error resuming SAM Application creation. {0}","Failed to initialize package directory with \"go mod tidy\". Launch config will not be automatically created.","Downloading code for schema {0}...","Downloaded code for schema {0}!","Get Help...","Created SAM application \"{0}\" but failed to generate launch configurations. You can generate these via {1} in the template or handler file.","Error creating new SAM Application. {0}","Project created successfully, but {0} file not found: {1}","Open {0}","Learn More","Created SAM application \"{0}\" and added launch configurations to launch.json: {1}"],"keys":["AWS.samcli.initWizard.source.error.notInWorkspace","AWS.samcli.initWizard.resume.error","AWS.message.warning.gotidyfailed","AWS.message.info.schemas.downloadCodeBindings.start","AWS.message.info.schemas.downloadCodeBindings.finished","AWS.generic.message.getHelp","AWS.samcli.initWizard.launchConfigFail","AWS.samcli.initWizard.general.error","AWS.samcli.initWizard.source.error.notFound","AWS.generic.open","AWS.generic.message.learnMore","AWS.samcli.initWizard.completionMessage"]},"lambda/commands/deploySamApplication":{"messages":["Deploying SAM Application to {0}...","Failed to deploy SAM application.","Building SAM Application...","\"sam build\" failed: {0}","Attempting to package source template directory directly since \"sam build\" failed","Packaging SAM Application to S3 Bucket: {0}","Deploying SAM Application to CloudFormation Stack: {0}","Starting SAM Application deployment...","Successfully deployed SAM Application to CloudFormation Stack: {0}","SAM Application deployment succeeded."],"keys":["AWS.samcli.deploy.statusbar.message","AWS.samcli.deploy.workflow.error","AWS.samcli.deploy.workflow.init","AWS.samcli.build.failedBuild","AWS.samcli.deploy.workflow.packaging.noBuild","AWS.samcli.deploy.workflow.packaging","AWS.samcli.deploy.workflow.stackName.initiated","AWS.samcli.deploy.workflow.start","AWS.samcli.deploy.workflow.success","AWS.samcli.deploy.workflow.success.general"]},"shared/sam/cli/samCliDetection":{"messages":["Get SAM CLI","Locate SAM CLI...","Settings updated.","Cannot find SAM CLI, which is required to create new Serverless Applications and debug them locally. If you have already installed the SAM CLI, update your User Settings by locating it.","SAM CLI Location: {0}"],"keys":["AWS.samcli.userChoice.visit.install.url","AWS.samcli.userChoice.browse","AWS.samcli.detect.settings.updated","AWS.samcli.error.notFound","AWS.samcli.configured.location"]},"shared/ui/picker":{"messages":["Refresh","[No items found]","Click here to go back","There was an error retrieving more items."],"keys":["AWS.generic.refresh","AWS.picker.dynamic.noItemsFound.label","AWS.picker.dynamic.noItemsFound.detail","AWS.picker.dynamic.errorNode.label"]},"ssmDocument/ssm/ssmClient":{"messages":["SSM Document Language Server"],"keys":["ssm.server.name"]},"ssmDocument/commands/createDocumentFromTemplate":{"messages":["Hello world using Python","An example of an Automation document using \"`aws:executeScript`\" with a Python script","Hello world using Powershell","An example of an Automation document using \"`aws:executeScript`\" with a Powershell script","Select a document template","There was an error creating the SSM Document from the template, check log for details."],"keys":["AWS.ssmDocument.template.automationHelloWorldPython.label","AWS.ssmDocument.template.automationHelloWorldPython.description","AWS.ssmDocument.template.automationHelloWorldPowershell.label","AWS.ssmDocument.template.automationHelloWorldPowershell.description","AWS.message.prompt.selectSsmDocumentTemplate.placeholder","AWS.message.error.ssmDocument.openTextDocumentFromSelection"]},"ssmDocument/commands/publishDocument":{"messages":["Could not get active text editor for local Systems Manager Document definition","Current editor language does not match the supported formats: {0}","Would you like to make this the default version for {0}?"],"keys":["AWS.message.error.ssmDocument.publishDocument.could_not_open","AWS.message.error.ssmDocument.publishDocument.invalid_format","AWS.ssmDocument.publishDocument.updateVersion.prompt"]},"ssmDocument/commands/openDocumentItem":{"messages":["Could not fetch document: {0}","Select a document version to download"],"keys":["AWS.message.error.ssmDocument.openDocument.could_not_open","AWS.message.prompt.selectSsmDocumentVersion.placeholder"]},"ssmDocument/commands/deleteDocument":{"messages":["Are you sure you want to delete document {0}?","Delete document failed: Empty document name","Deleted document {0} successfully.","Could not delete document {0}."],"keys":["AWS.ssmDocument.deleteDocument.prompt","AWS.message.info.ssmDocument.deleteDocument.failed.empty_document_name","AWS.message.info.ssmDocument.deleteDocument.delete_success","AWS.message.error.ssmDocument.deleteDocument.could_not_delete"]},"ssmDocument/commands/updateDocumentVersion":{"messages":["ould not update document {0} default version. An empty version was provided.","Updated document {0} default version to {1} successfully","Could not update document {0} default version. The current account does not have ownership of this document.","Could not update default version for: {0}","Select a document version to download","Selected document has only one version. Unable to change default version."],"keys":["AWS.message.info.ssmDocument.updateDocumentVersion.failed.emptyversion","AWS.message.info.ssmDocument.updateDocumentVersion.success","AWS.message.error.ssmDocument.updateDocumentVersion.does_not_own","AWS.message.error.ssmDocument.updateDocumentVersion.could_not_update_version","AWS.message.prompt.selectSsmDocumentVersion.placeholder","AWS.message.info.ssmDocument.updateDocumentVersion.no_other_versions"]},"lambda/wizards/samDeployWizard":{"messages":["Create Bucket...","Enter Existing Bucket Name...","Which SAM Template would you like to deploy to {0}?","Template \"{0}\" contains parameters. Do you want to override their default values?","The template {0} contains parameters without default values. In order to deploy, you must provide values for these parameters. Configure them now?","Configure","Which {0} Region would you like to deploy to?","No buckets found.","There was an error loading S3 buckets.","Select an {0} S3 Bucket to deploy code to","Select a ECR repo to deploy images to","Enter the name to use for the deployed stack","Support for Image-based Lambdas requires a minimum SAM CLI version of 1.13.0.","Enter a new bucket name","Created bucket: {0}","Failed to create bucket: {0}","Enter Existing Bucket Name","A stack name may contain only alphanumeric characters (case sensitive) and hyphens","A stack name must begin with an alphabetic character","A stack name must not be longer than 128 characters","Click here to go back","Default {0} Cloud9 Bucket"],"keys":["AWS.command.s3.createBucket","AWS.samcli.deploy.bucket.existingLabel","AWS.samcli.deploy.template.prompt","AWS.samcli.deploy.parameters.optionalPrompt.message","AWS.samcli.deploy.parameters.mandatoryPrompt.message","AWS.samcli.deploy.parameters.mandatoryPrompt.responseConfigure","AWS.samcli.deploy.region.prompt","AWS.samcli.deploy.s3bucket.picker.noBuckets","AWS.samcli.deploy.s3bucket.picker.error","AWS.samcli.deploy.s3Bucket.prompt","AWS.samcli.deploy.ecrRepo.prompt","AWS.samcli.deploy.stackName.prompt","AWS.output.sam.no.image.support","AWS.s3.createBucket.prompt","AWS.s3.createBucket.success","AWS.s3.createBucket.error.general","AWS.samcli.deploy.bucket.existingTitle","AWS.samcli.deploy.stackName.error.invalidCharacters","AWS.samcli.deploy.stackName.error.firstCharacter","AWS.samcli.deploy.stackName.error.length","AWS.picker.dynamic.noItemsFound.detail","AWS.samcli.deploy.bucket.cloud9name"]},"shared/codelens/resourceCodeLensProvider":{"messages":["View resource documentation ({0})"],"keys":["aws.resources.codelens.docs"]},"shared/sam/debugger/awsSamDebugger":{"messages":["{0} SAM debug: choose a workspace, then try again","{0} SAM: To debug a Lambda locally, create a launch.json from the Run panel, then select a configuration.","Run panel","Support for Image-based Lambdas requires a minimum SAM CLI version of 1.13.0.","Toolkit could not infer a runtime for config: {0}. Add a \"lambda.runtime\" field to your launch configuration.","Debugging go1.x lambdas requires a minimum SAM CLI version of {0}. Function will run locally without debug.","{0} SAM debug: unknown runtime: {1}"],"keys":["AWS.sam.debugger.noWorkspace","AWS.sam.debugger.noLaunchJson","AWS.gotoRunPanel","AWS.output.sam.no.image.support","AWS.sam.debugger.failedLaunch.missingRuntime","AWS.output.sam.local.no.go.support","AWS.sam.debugger.invalidRuntime"]},"lambda/models/samTemplates":{"messages":["{0} SAM Hello World","{0} SAM EventBridge Hello World","{0} SAM EventBridge App from Scratch","{0} Step Functions Sample App","A basic SAM app","Invokes a Lambda for every EC2 instance state change in your account","Invokes a Lambda based on a dynamic event trigger for an EventBridge Schema of your choice","Orchestrates multiple Lambdas to execute a stock trading workflow on an hourly schedule","A sample TypeScript backend app with Lambda and DynamoDB"],"keys":["AWS.samcli.initWizard.template.helloWorld.name","AWS.samcli.initWizard.template.helloWorld.name","AWS.samcli.initWizard.template.helloWorld.name","AWS.samcli.initWizard.template.helloWorld.name","AWS.samcli.initWizard.template.helloWorld.description","AWS.samcli.initWizard.template.eventBridge_helloWorld.description","AWS.samcli.initWizard.template.eventBridge_starterApp.description","AWS.samcli.initWizard.template.stepFunctionsSampleApp.description","AWS.samcli.initWizard.template.typeScriptBackendTemplate.description"]},"shared/sam/cli/samCliInvoker":{"messages":["Running command: {0}"],"keys":["AWS.running.command"]},"dynamicResources/commands/deleteResource":{"messages":["Delete resource {0} ({1})?","Delete","Cancel","Deleted resource {0} ({1})","Resource type {0} does not currently support delete in {1}","Failed to delete resource {0} ({1})"],"keys":["aws.resources.deleteResource.prompt","AWS.generic.delete","AWS.generic.cancel","aws.resources.deleteResource.success","aws.resources.deleteResource.unsupported","aws.resources.deleteResource.failure"]},"dynamicResources/commands/openResource":{"messages":["You are editing an AWS resource. Any saved changes will be reflected on the remote resource.","Failed to open resource {0} ({1})","\"{0}\" is a create-only property and cannot be modified on an existing resource","\"{0}\" is a read-only property and cannot be modified"],"keys":["aws.resources.editResource.notice","AWS.message.error.resources.openResource.failed","AWS.message.information.resources.createOnlyProperty","AWS.message.information.resources.readOnlyProperty"]},"dynamicResources/commands/saveResource":{"messages":["Created resource {0} ({1})","{0} does not currently support resource creation in {1}","Failed to create resource ({0})","Update cancelled - no diff between local and remote definitions","Updated resource {0} ({1})","{0} does not currently support resource updating in {1}","Failed to update resource {0} ({1})"],"keys":["aws.resources.createResource.success","aws.resources.createResource.unsupported","aws.resources.createResource.failure","aws.resources.updateResource.noDiff","aws.resources.updateResource.success","aws.resources.createResource.unsupported","aws.resources.updateResource.failure"]},"ecs/commands/updateEnableExecuteCommandFlag":{"messages":["Yes","Yes, and don't ask again","No","Enabling command execution will change the state of resources in your AWS account, including but not limited to stopping and restarting the service.\nAltering the state of resources while the Execute Command is enabled can lead to unpredictable results.\n Continue?","Disabling command execution will change the state of resources in your AWS account, including but not limited to stopping and restarting the service.\n Continue?","ECS Exec is already enabled for this service","ECS Exec is already disabled for this service","Enabling ECS Exec for service: {0}","Disabling ECS Exec for service: {0}"],"keys":["AWS.generic.response.yes","AWS.message.prompt.yesDontAskAgain","AWS.generic.response.no","AWS.command.ecs.runCommandInContainer.warning.enableExecuteFlag","AWS.command.ecs.runCommandInContainer.warning.disableExecuteFlag","AWS.command.ecs.enableEcsExec.alreadyEnabled","AWS.command.ecs.enableEcsExec.alreadyDisabled","AWS.ecs.updateService.enable","AWS.ecs.updateService.disable"]},"ecs/commands/runCommandInContainer":{"messages":["ECS: Executing command...","Failed to execute command in container."],"keys":["AWS.command.ecs.statusBar.executing","AWS.ecs.runCommandInContainer.error"]},"apprunner/commands/pauseService":{"messages":["Your service will be unavailable while paused. You can resume the service once the pause operation is complete."],"keys":["aws.apprunner.pauseService.notify"]},"apprunner/commands/deleteService":{"messages":["Type 'delete' to confirm","Delete App Runner service","delete"],"keys":["AWS.apprunner.deleteService.name.invalid","AWS.apprunner.deleteService.title","AWS.apprunner.deleteService.placeholder"]},"dynamicResources/explorer/nodes/resourceNode":{"messages":["Preview"],"keys":["AWS.generic.preview"]},"credentials/credentialsCreator":{"messages":["User cancelled entering authentication code","Enter Authentication Code Here","MFA Challenge for {0}","Enter code for MFA device {0}"],"keys":["AWS.error.mfa.userCancelled","AWS.prompt.mfa.enterCode.placeholder","AWS.prompt.mfa.enterCode.title","AWS.prompt.mfa.enterCode.prompt"]},"credentials/providers/ssoCredentialProvider":{"messages":["Failed to load SSO credentials. Try logging in again."],"keys":["AWS.message.credentials.sso.error"]},"shared/ui/buttons":{"messages":["View Toolkit Documentation","Exit","Refresh"],"keys":["AWS.command.help","AWS.generic.exit","AWS.generic.refresh"]},"shared/ui/common/region":{"messages":["Default region","Select a region"],"keys":["AWS.generic.defaultRegion","AWS.generic.selectRegion"]},"shared/wizards/multiStepWizard":{"messages":["Select a different folder...","There are no workspace folders open. Select a folder...","Open","The selected folder will be added to the workspace.","Select a workspace folder for your new project"],"keys":["AWS.initWizard.location.select.folder","AWS.initWizard.location.select.folder.empty.workspace","AWS.samcli.initWizard.name.browse.openLabel","AWS.wizard.location.select.folder.detail","AWS.wizard.location.prompt"]},"stepFunctions/explorer/stepFunctionsNodes":{"messages":["[No State Machines found]"],"keys":["AWS.explorerNode.stepfunctions.noStateMachine"]},"stepFunctions/commands/visualizeStateMachine/abstractAslVisualizationManager":{"messages":["There was an error rendering State Machine Graph, check logs for details."],"keys":["AWS.stepfunctions.visualisation.errors.rendering"]},"stepFunctions/commands/visualizeStateMachine/aslVisualization":{"messages":["Previewing ASL document. <a href=\"\" style=\"text-decoration:none;\">View</a>","Errors detected. Cannot preview.","Rendering ASL graph...","State machine visualization closed due to file renaming or closure.","Graph: {0}"],"keys":["AWS.stepFunctions.graph.status.inSync","AWS.stepFunctions.graph.status.notInSync","AWS.stepFunctions.graph.status.syncing","AWS.stepfunctions.visualisation.errors.rename","AWS.stepFunctions.graph.titlePrefix"]},"stepFunctions/wizards/publishStateMachineWizard":{"messages":["Quick Create","Create a state machine from the ASL definition using default settings","Quick Update","Update an existing state machine with the ASL definition","Publish to {0} Step Functions ({1})","Name your state machine","State machine name cannot be empty","No roles could be found","Create an IAM role before proceeding. See documentation for details.","Select execution role ({0})","No state machines could be found","Create a state machine before proceeding. See documentation for details.","Select state machine to update ({0})"],"keys":["AWS.stepFunctions.publishWizard.publishAction.quickCreate.label","AWS.stepFunctions.publishWizard.publishAction.quickCreate.detail","AWS.stepFunctions.publishWizard.publishAction.quickUpdate.label","AWS.stepFunctions.publishWizard.publishAction.quickUpdate.detail","AWS.stepFunctions.publishWizard.publishAction.title","AWS.stepFunctions.publishWizard.stateMachineName.title","AWS.stepFunctions.publishWizard.stateMachineName.validation.empty","AWS.stepFunctions.publishWizard.iamRole.noRoles.label","AWS.stepFunctions.publishWizard.iamRole.noRoles.detail","AWS.stepFunctions.publishWizard.iamRole.title","AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.label","AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.detail","AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.title"]},"stepFunctions/wizards/createStateMachineWizard":{"messages":["Hello world","A basic example using a Pass state.","Retry failure","An example of a Task state using a retry policy to handle Lambda failures.","Wait state","Delays the state machine from continuing for a specified time.","Parallel","Used to create parallel branches of execution in your state machine.","Map state","Use a Map state to dynamically process data in an array.","Catch failure","An example of a Task state using Catchers to handle Lambda failures.","Choice state","Adds branching logic to a state machine.","Select a starter template","Select template format"],"keys":["AWS.stepfunctions.template.helloWorld.label","AWS.stepfunctions.template.helloWorld.description","AWS.stepfunctions.template.retryFailure.label","AWS.stepfunctions.template.retryFailure.description","AWS.stepfunctions.template.waitState.label","AWS.stepfunctions.template.waitState.description","AWS.stepfunctions.template.parallel.label","AWS.stepfunctions.template.parallel.description","AWS.stepfunctions.template.mapState.label","AWS.stepfunctions.template.mapState.description","AWS.stepfunctions.template.catchFailure.label","AWS.stepfunctions.template.catchFailure.description","AWS.stepfunctions.template.choiceState.label","AWS.stepfunctions.template.choiceState.description","AWS.message.prompt.selectStateMachineTemplate.placeholder","AWS.message.prompt.selectStateMachineTemplateFormat.placeholder"]},"stepFunctions/wizards/previewStateMachineCDKWizard":{"messages":["[No workspace found]","Select CDK workspace","[No CDK App Location]","[No cdk application(s) found in workspace '{0}']","Select CDK Application","[No state machine(s) found in cdk application '{0}']","Select State Machine"],"keys":["Aws.cdk.app.noWorkspace","AWS.message.prompt.selectCDKWorkspace.placeholder","AWS.cdk.explorerNode.noApps","AWS.cdk.explorerNode.noApps","AWS.message.prompt.selectCDKStateMachine.placeholder","Aws.cdk.explorerNode.app.noStateMachines","AWS.message.prompt.selectCDKStateMachine.placeholder"]},"lambda/utils":{"messages":["Loading CloudFormation Stacks...","Loading Lambdas..."],"keys":["AWS.message.statusBar.loading.cloudFormation","AWS.message.statusBar.loading.lambda"]},"lambda/models/samLambdaRuntime":{"messages":["Learn More","Runtime {0} has been deprecated. Update to a currently-supported runtime.","Select a SAM Application Runtime"],"keys":["AWS.generic.message.learnMore","AWS.samcli.deprecatedRuntime","AWS.samcli.initWizard.runtime.prompt"]},"eventSchemas/utils":{"messages":["Loading Registry Items...","Loading Schema Items...","Searching Schemas..."],"keys":["AWS.message.statusBar.loading.registries","AWS.message.statusBar.loading.schemaItems","AWS.message.statusBar.searching.schemas"]},"shared/debug/launchConfiguration":{"messages":["Get Help..."],"keys":["AWS.generic.message.getHelp"]},"eventSchemas/explorer/registryItemNode":{"messages":["Registry name not found","[No Registry Schemas]"],"keys":["AWS.explorerNode.registry.registryName.Not.Found","AWS.explorerNode.registry.noSchemas"]},"eventSchemas/explorer/schemasNode":{"messages":["[No Schema Registries]"],"keys":["AWS.explorerNode.schemas.noRegistry"]},"eventSchemas/wizards/schemaCodeDownloadWizard":{"messages":["Select a code binding language","Select a version for schema {0} :","Code bindings will be downloaded to selected folder.","Select a workspace folder to download code bindings"],"keys":["AWS.schemas.downloadCodeBindings.initWizard.language.prompt","AWS.schemas.downloadCodeBindings.initWizard.version.prompt","AWS.schemas.downloadCodeBindings.initWizard.location.select.folder.detail","AWS.schemas.downloadCodeBindings.initWizard.location.prompt"]},"lambda/wizards/samInitWizard":{"messages":["Select a SAM Application Template","Select an EventBridge Schemas Region","Select a Dependency Manager","Error loading registries.","Select a Registry","Error loading schemas in registry {0}.","No schemas found in registry {0}.","Select a Schema","Application name cannot be empty","The path separator ({0}) is not allowed in application names","Enter a name for your new application","Select an Architecture","Select a workspace folder for your new project","The selected folder will be added to the workspace."],"keys":["AWS.samcli.initWizard.template.prompt","AWS.samcli.initWizard.schemas.region.prompt","AWS.samcli.initWizard.dependencyManager.prompt","AWS.samcli.initWizard.schemas.registry.failed_to_load_resources","AWS.samcli.initWizard.schemas.registry.prompt","AWS.samcli.initWizard.schemas.failed_to_load_resources","AWS.samcli.initWizard.schemas.notFound\"","AWS.samcli.initWizard.schemas.schema.prompt","AWS.samcli.initWizard.name.error.empty","AWS.samcli.initWizard.name.error.pathSep","AWS.samcli.initWizard.name.prompt","AWS.samcli.initWizard.architecture.prompt","AWS.samInit.location.title","AWS.samInit.location.detail"]},"ssmDocument/util/util":{"messages":["Select a document format"],"keys":["AWS.message.prompt.selectSsmDocumentFormat.placeholder"]},"ssmDocument/wizards/publishDocumentWizard":{"messages":["Which AWS Region would you like to publish to?","Name your document","No self-owned documents could be found. Create and upload a Systems Manager Document before updating.","Select a document to update ({0})","Quick Create","Create a Systems Manager Document","Quick Update","Update an existing Systems Manager Document","Publish to AWS Systems Manager Document ({0})"],"keys":["AWS.message.prompt.ssmDocument.publishDocument.region","AWS.ssmDocument.publishWizard.ssmDocumentName.title","AWS.ssmDocument.publishWizard.ssmDocumentToUpdate.noDocument","AWS.ssmDocument.publishWizard.ssmDocumentToUpdate.title","AWS.ssmDocument.publishWizard.publishAction.quickCreate.label","AWS.ssmDocument.publishWizard.publishAction.quickCreate.detail","AWS.ssmDocument.publishWizard.publishAction.quickUpdate.label","AWS.ssmDocument.publishWizard.publishAction.quickUpdate.detail","AWS.ssmDocument.publishWizard.publishAction.title"]},"lambda/config/templates":{"messages":["Your templates.json file has an issue. {0} was detected as {1} instead of one of the following: [{2}]. Please change or remove this field, and try again."],"keys":["AWS.lambda.configure.error.fieldtype"]},"shared/sam/localLambdaRunner":{"messages":["Building SAM application...","Build complete.","\"sam build\" failed: {0}","Starting SAM application locally","Failed to start local API Gateway: {0}","Failed to run SAM application locally: {0}","Preparing to debug locally: {0}","Preparing to run locally: {0}","Waiting for SAM application to start...","Sending request to local API: {0}","Attaching debugger to SAM application...","Retry limit reached while trying to attach the debugger.","Debugger attached","Unable to attach Debugger. Check {0} Toolkit logs. If it took longer than expected to start, you can still attach.","Failed to use debugger port: {0}","Failed to use API port: {0}"],"keys":["AWS.output.building.sam.application","AWS.output.building.sam.application.complete","AWS.samcli.build.failedBuild","AWS.output.starting.sam.app.locally","AWS.error.during.apig.local","AWS.error.during.sam.local","AWS.output.sam.local.startDebug","AWS.output.sam.local.startRun","AWS.output.sam.local.waiting","AWS.sam.localApi.request","AWS.output.sam.local.attaching","AWS.output.sam.local.attach.retry.limit.exceeded","AWS.output.sam.local.attach.success","AWS.output.sam.local.attach.failure","AWS.samcli.local.invoke.portUnavailable","AWS.apig.portUnavailable"]},"shared/sam/cli/samCliValidationNotification":{"messages":["Get SAM CLI","Visit Marketplace","Cannot find SAM CLI. It is required in order to work with Serverless Applications locally.","An unexpected issue occured while validating SAM CLI: {0}","Check the Marketplace for an updated {0} Toolkit.","Update your SAM CLI.","Your SAM CLI version {0} does not meet requirements ({1}\\xA0\\u2264\\xA0version\\xA0<\\xA0{2}). {3}"],"keys":["AWS.samcli.userChoice.visit.install.url","AWS.samcli.userChoice.update.awstoolkit.url","AWS.samcli.notification.not.found","AWS.samcli.notification.unexpected.validation.issue","AWS.samcli.recommend.update.toolkit","AWS.samcli.recommend.update.samcli","AWS.samcli.notification.version.invalid"]},"shared/sam/debugger/csharpSamDebug":{"messages":["Debugging dotnetcore3.1 lambdas requires a minimum SAM CLI version of 1.4.0. Function will run locally without debug.","The vsdbg debugger does not currently support the arm64 architecture. Function will run locally without debug.","Installing .NET Core Debugger to {0}...","Error installing .NET Core Debugger: {0}"],"keys":["AWS.output.sam.local.no.net.3.1.debug","AWS.output.sam.local.no.arm.net.3.1.debug","AWS.samcli.local.invoke.debugger.install","AWS.samcli.local.invoke.debugger.install.failed"]},"shared/sam/debugger/goSamDebug":{"messages":["Failed to install Delve for the lambda container.","The Delve repo was not found in your GOPATH. Downloading in a temporary directory..."],"keys":["AWS.sam.debugger.godelve.failed","AWS.sam.debugger.godelve.download"]},"shared/ui/pickerPrompter":{"messages":["[No items found]","Click here to go back","[Error loading items]"],"keys":["AWS.picker.dynamic.noItemsFound.label","AWS.picker.dynamic.noItemsFound.detail","AWS.picker.dynamic.error.label"]},"shared/utilities/cliUtils":{"messages":["downloading...","installing local copy...","Install manually...","Install","{0} could not find {1} CLI. Install a local copy?","{0} Toolkit","Installing: {0} CLI","Installation of the {0} CLI failed."],"keys":["AWS.installProgress.downloading","AWS.installProgress.installingLocal","AWS.cli.manualInstall","AWS.generic.install","AWS.cli.installCliPrompt","AWS.channel.aws.toolkit","AWS.cli.installProgress","AWS.cli.failedInstall"]},"apprunner/wizards/apprunnerCreateServiceWizard":{"messages":["Service names must be at least 4 characters","Service names cannot be more than 40 characters","Service names cannot contain whitespace","Invalid character(s): {0}","Select instance configuration","Create a service from a public or private Elastic Container Registry repository","Create a service from a GitHub repository","Select a source code location type","Name your service"],"keys":["AWS.apprunner.createService.name.validation","AWS.apprunner.createService.name.validationExceeds","AWS.apprunner.createService.name.validationWhitespace","AWS.apprunner.createService.name.validationBadChar","AWS.apprunner.createService.selectInstanceConfig.title","AWS.apprunner.createService.ecr.detail","AWS.apprunner.createService.repository.detail","AWS.apprunner.createService.sourceType.title","AWS.apprunner.createService.name.title"]},"stepFunctions/utils":{"messages":["Loading State Machines..."],"keys":["AWS.message.statusBar.loading.statemachines"]},"dynamicResources/explorer/nodes/resourcesNode":{"messages":["Resources","[Enable resource types...]","Show Resources...."],"keys":["AWS.explorerNode.resources.label","AWS.explorerNode.resources.noResourceTypes","AWS.command.resources.configure"]},"apigateway/explorer/apiGatewayNodes":{"messages":["[No API Gateway REST APIs found]"],"keys":["AWS.explorerNode.apigateway.noApis"]},"lambda/explorer/cloudFormationNodes":{"messages":["[No Stacks found]","[Stack has no Lambda Functions]"],"keys":["AWS.explorerNode.cloudformation.noStacks","AWS.explorerNode.cloudFormation.noFunctions"]},"lambda/explorer/lambdaNodes":{"messages":["[No Functions found]"],"keys":["AWS.explorerNode.lambda.noFunctions"]},"cloudWatchLogs/explorer/cloudWatchLogsNode":{"messages":["[No log groups found]","[No Logs found]","Error loading CloudWatch Logs resources"],"keys":["AWS.explorerNode.cloudWatchLogs.nologs","AWS.explorerNode.cloudWatchLogs.placeholder","AWS.explorerNode.cloudWatchLogs.error"]},"ssmDocument/explorer/ssmDocumentNode":{"messages":["[No documentType found]"],"keys":["AWS.explorerNode.registry.noSsmDocument"]},"apprunner/explorer/apprunnerNode":{"messages":["[No App Runner services found]"],"keys":["AWS.explorerNode.apprunner.noServices"]},"shared/ui/common/location":{"messages":["Open","Select a folder...","Select a folder"],"keys":["AWS.generic.open","AWS.location.select.folder","AWS.location.prompt"]},"shared/sam/cli/samCliLocalInvoke":{"messages":["Error running command \"{0}\": {1}","Command stopped: \"{0}\""],"keys":["AWS.samcli.error","AWS.samcli.stopped"]},"apprunner/wizards/imageRepositoryWizard":{"messages":["Failed to list repositories","Click to go back","Custom ECR URL","Select or enter an image repository","Port must be a number","Enter a port for the new service","No tags found","Click to go back","Failed to get tags for repository","Click to go back","Select an ECR tag","Select a role to pull from ECR"],"keys":["AWS.apprunner.createService.selectImageRepo.failed","AWS.generic.goBack","AWS.apprunner.createService.selectImageRepo.input","AWS.apprunner.createService.selectImageRepo.title","AWS.apprunner.createService.selectPort.invalidPort","AWS.apprunner.createService.selectPort.title","AWS.apprunner.createService.selectTags.noFound","AWS.generic.goBack","AWS.apprunner.createService.selectTag.failed","AWS.generic.goBack","AWS.apprunner.createService.selectTag.title","AWS.apprunner.createService.selectRole.title"]},"apprunner/wizards/codeRepositoryWizard":{"messages":["Command cannot be empty","Enter GitHub URL","Select a remote GitHub repository","Select a remote repository or enter a URL","Enter branch name","Select a branch","Select a branch or enter a branch name","Select a runtime","Enter a build command","Enter a start command","Port must be a number","Enter a port for the new service","Failed to list GitHub connections","Click to go back","Select a connection","App Runner will read \"apprunner.yaml\" in the root of your repository for configuration details","Configure all settings here","Use configuration file","Choose configuration source"],"keys":["AWS.apprunner.command.invalid","AWS.apprunner.createService.customRepo","AWS.apprunner.createService.selectRepository.title","AWS.apprunner.createService.selectRepository.placeholder","AWS.apprunner.createService.customRepo","AWS.apprunner.createService.selectBranch.title","AWS.apprunner.createService.selectBranch.placeholder","AWS.apprunner.createService.selectRuntime.title","AWS.apprunner.createService.buildCommand.title","AWS.apprunner.createService.startCommand.title","AWS.apprunner.createService.selectPort.invalidPort","AWS.apprunner.createService.selectPort.title","AWS.apprunner.createService.selectConnection.failed","AWS.generic.goBack","AWS.apprunner.createService.selectConnection.title","AWS.apprunner.createService.configSource.detail","AWS.apprunner.createService.configSource.apiLabel","AWS.apprunner.createService.configSource.repoLabel","AWS.apprunner.createService.configSource.title"]},"apprunner/wizards/deploymentButton":{"messages":["Turn on automatic deployment","Turn off automatic deployment","App Runner automatic deployments incur an additional cost.","View Pricing","Don't Show Again"],"keys":["AWS.apprunner.buttons.enableAutoDeploy","AWS.apprunner.buttons.disableAutoDeploy","aws.apprunner.createService.priceNotice.message","aws.apprunner.createService.priceNotice.view","aws.generic.doNotShowAgain"]},"ssmDocument/explorer/documentTypeNode":{"messages":["[No Systems Manager Document Registries]"],"keys":["AWS.explorerNode.ssmDocument.noRegistry"]},"apprunner/explorer/apprunnerServiceNode":{"messages":["Deploying...","Creating...","Pausing...","Resuming...","Deleting...","Updating...","[No App Runner logs found]"],"keys":["AWS.apprunner.operationStatus.deploy","AWS.apprunner.operationStatus.create","AWS.apprunner.operationStatus.pause","AWS.apprunner.operationStatus.resume","AWS.apprunner.operationStatus.delete","AWS.apprunner.operationStatus.update","AWS.explorerNode.apprunner.nologs"]},"shared/ui/common/variablesPrompter":{"messages":["Failed to read environment variables","Skip","Use file...","Configure environment variables"],"keys":["AWS.environmentVariables.prompt.failed","AWS.generic.skip","AWS.generic.useFile","AWS.environmentVariables.prompt.title"]},"shared/ui/common/rolePrompter":{"messages":["Create Role...","Failed to create new role","Click the \"+\" to generate a new role","No valid roles found","Select a role"],"keys":["AWS.generic.createRole","AWS.rolePrompter.createRole.failed","AWS.rolePrompter.noRoles.detail","AWS.rolePrompter.noRoles.title","AWS.rolePrompter.placeholder"]},"ssmDocument/explorer/registryItemNode":{"messages":["Owned by Amazon","Owned by me","Shared with me","[No documents found]"],"keys":["AWS.explorerNode.registry.name.amazon","AWS.explorerNode.registry.name.self","AWS.explorerNode.registry.name.shared","AWS.explorerNode.documentType.noSsmDocument"]},"extension":{"messages":[],"keys":[]}}